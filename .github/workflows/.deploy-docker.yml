name: Deploy Docker Image

on:
  push:
    branches:
    #   - master  # Ova grana
    - feature/US_#6
  pull_request:
    branches:
    #   - master  # Ova grana
    - feature/US_#6
  workflow_run:
    workflows: [Start build && test projects]  # Ovo je ime workflow-a koji pokreće ovaj workflow
    types: [completed]  # Pokreće se nakon što je "Start build && test projects" workflow završen

jobs:
  # Job za deploy Docker slike
  docker-deploy:
    runs-on: ubuntu-latest

    env:
      RELEASE_TAG: latest  # Inicijalizuješ RELEASE_TAG sa "latest", možeš kasnije menjati

    steps:
      # Korak koji osigurava da se deployment izvršava samo ako je prethodni workflow bio uspešan
      - name: Check if previous workflow was successful
        if: ${{ github.event.workflow_run.conclusion == 'success' }}
        run: echo "Previous workflow was successful. Proceeding with deployment."

      # Skip deployment for non-master branches
      - name: Skip deployment for non-master branches
        if: ${{ github.ref != 'refs/heads/master' }}
        run: |
          echo "Not on master branch. Skipping deployment."
          exit 0  # Označava kao uspešan i preskoči sve sledeće

      # Checkout-ujte kod
      - name: Checkout code
        uses: actions/checkout@v2

      # Logovanje u Docker Hub sa korisničkim imenom i Docker tokenom
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Setovanje verzionisanja slike na osnovu sadržaja iz version.txt
      - name: Set image tag based on version.txt
        id: set_tag
        run: |
          VERSION=$(cat version.txt)  # Učitajte verziju iz version.txt
          echo "RELEASE_TAG=${VERSION}" >> $GITHUB_ENV

      # Kreiranje Docker slike za server
      - name: Build Docker image for server
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/server-image:${{ env.RELEASE_TAG }} ./server

      # Kreiranje Docker slike za client
      - name: Build Docker image for client
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/client-image:${{ env.RELEASE_TAG }} ./client

      # Kreiranje Docker slike za Nginx
      - name: Build Docker image for Nginx
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/nginx-image:${{ env.RELEASE_TAG }} ./nginx

      # Push Docker slike na Docker Hub
      - name: Push Docker images to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/server-image:${{ env.RELEASE_TAG }}
          docker push ${{ secrets.DOCKER_USERNAME }}/client-image:${{ env.RELEASE_TAG }}
          docker push ${{ secrets.DOCKER_USERNAME }}/nginx-image:${{ env.RELEASE_TAG }}