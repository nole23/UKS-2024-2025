"""
Django settings for uks project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from decouple import config
from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-5w8m!kum2)(6v2tc^%14pwc=b!y7ke-c35l!!$wfiv&a6#r$9a'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
]

CORS_ALLOWED_ORIGINS = [
    'http://localhost:4200',  # Angular aplikacija
]

ROOT_URLCONF = 'uks.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'uks.wsgi.application'

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'uks.2024.ns@gmail.com'
EMAIL_HOST_PASSWORD = 'Generisani_Aplikacijski_Password'  # Aplikacijska lozinka
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases


# Detekcija okruženja, ako se koristi Docker
IS_DOCKER = os.environ.get('IS_DOCKER', False)

# Učitavanje odgovarajuće .env datoteke na temelju okruženja
env_file = '.env'  # Podrazumijevana datoteka
if os.environ.get('DJANGO_ENV') == 'docker':
    env_file = '.env.docker'
elif os.environ.get('DJANGO_ENV') == 'test':
    env_file = '.env.test'

# Učitaj varijable iz odgovarajuće .env datoteke
load_dotenv(dotenv_path=os.path.join(BASE_DIR, env_file))

# Učitavanje varijabli iz odgovarajuće .env datoteke
DATABASES = {
    'default': {
        'ENGINE': config('DATABASE_ENGINE', default='django.db.backends.sqlite3'),
        'NAME': config('DATABASE_NAME', default=BASE_DIR / 'db.sqlite3'),  # Koristi SQLite ako nije definisano drugačije
        'USER': config('DATABASE_USER', default=''),  # Prazno za SQLite
        'PASSWORD': config('DATABASE_PASSWORD', default=''),  # Prazno za SQLite
        'HOST': config('DATABASE_HOST', default=''),  # Prazno za SQLite
        'PORT': config('DATABASE_PORT', default=''),  # Prazno za SQLite
    }
}

# Redis settings for caching
CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': 'redis://redis:6379/1',
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# u settings.py
REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
    ),
}

CSRF_COOKIE_HTTPONLY = False
APPEND_SLASH = False

# # settings.py
# AUTHENTICATION_BACKENDS = [
#     'users.backends.EmailAuthBackend',  # Naš backend za email autentifikaciju
#     'django.contrib.auth.backends.ModelBackend',  # Standardni backend
# ]

# Podesi direktorijum za upload fajlova
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Uključi postavke za statičke fajlove
STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / 'static']
